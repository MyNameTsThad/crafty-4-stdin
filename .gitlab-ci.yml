stages:
- build-dev
- build-prod

docker-build-dev:
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--experimental"]
  stage: build-dev
  tags:
  - docker
  rules:
    - if: $CI_COMMIT_BRANCH == 'dev'
  environment:
    name: development
  before_script:
  - |
    apk --no-cache add curl
    latest_tag=$(curl -s https://api.github.com/repos/docker/buildx/releases/latest | sed -Ene '/^ *"tag_name": *"(v.+)",$/s//\1/p')
    echo "Using buildx version $latest_tag"
    curl -sSLo docker-buildx "https://github.com/docker/buildx/releases/download/$latest_tag/buildx-$latest_tag.linux-amd64"
    chmod a+x docker-buildx
    mkdir -p ~/.docker/cli-plugins
    mv docker-buildx ~/.docker/cli-plugins/docker-buildx
    docker version
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - |
      tag=":$CI_COMMIT_REF_SLUG"
      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
    - docker buildx create --use --name zedBuilder
    - docker buildx build
      --cache-from type=registry,ref="$CI_REGISTRY_IMAGE${tag}"
      --build-arg BUILDKIT_INLINE_CACHE=1
      --tag "$CI_REGISTRY_IMAGE${tag}"
      --platform linux/arm64/v8,linux/amd64
      --push .
  after_script:
    - |
      docker buildx rm zedBuilder && echo "Successfully Stopped builder instance" || echo "Failed to stop builder instance."
      echo "Please review multi-arch manifests are present:"
      docker buildx imagetools inspect "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

docker-build-prod:
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--experimental"]
  stage: build-prod
  tags:
  - docker
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  environment:
    name: production
  before_script:
  - |
    apk --no-cache add curl
    latest_tag=$(curl -s https://api.github.com/repos/docker/buildx/releases/latest | sed -Ene '/^ *"tag_name": *"(v.+)",$/s//\1/p')
    echo "Using buildx version $latest_tag"
    curl -sSLo docker-buildx "https://github.com/docker/buildx/releases/download/$latest_tag/buildx-$latest_tag.linux-amd64"
    chmod a+x docker-buildx
    mkdir -p ~/.docker/cli-plugins
    mv docker-buildx ~/.docker/cli-plugins/docker-buildx
    docker version
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - |
      tag=""
      echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
    - docker buildx create --use --name zedBuilder
    - docker buildx build
      --cache-from type=registry,ref="$CI_REGISTRY_IMAGE${tag}"
      --build-arg BUILDKIT_INLINE_CACHE=1
      --tag "$CI_REGISTRY_IMAGE${tag}"
      --platform linux/arm64/v8,linux/amd64
      --push .
  after_script:
    - |
      docker buildx rm zedBuilder && echo "Successfully Stopped builder instance" || echo "Failed to stop builder instance."
      echo "Please review multi-arch manifests are present:"
      docker buildx imagetools inspect "$CI_REGISTRY_IMAGE${tag}"
